@using GenesisBlog.Models
@using GenesisBlog.Enums

@model BlogPost

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>BlogPost</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mb-5">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>


            <div class="form-group mb-5">
                <label asp-for="Abstract" class="control-label"></label>               
                <textarea asp-for="Abstract" class="form-control" rows=5></textarea>
                <span asp-validation-for="Abstract" class="text-danger"></span>
            </div>

            <div class="form-group mb-5">
                <label asp-for="Content" class="control-label"></label>
                <div id="quillEditor"></div>
                <span asp-validation-for="Content" class="text-danger"></span>
                <input type="hidden" asp-for="Content" />      
            </div>
        

@*            Update the select to get its items from the enum*@
            <div class="form-group mb-5">
                <label asp-for="BlogPostState" class="control-label"></label>
                <select asp-for="BlogPostState" class="form-control" asp-items="@Html.GetEnumSelectList<BlogPostState>()" ></select>
                <span asp-validation-for="BlogPostState" class="text-danger"></span>
            </div>

  

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
